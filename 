[1mdiff --git a/models/entry.js b/models/entry.js[m
[1mindex de71971..c4cbe6c 100644[m
[1m--- a/models/entry.js[m
[1m+++ b/models/entry.js[m
[36m@@ -14,8 +14,7 @@[m [mclass Entry {[m
    [m
     // READ all entries[m
     static get all() {[m
[31m-        const entries = entryData.map((je) => new Entry(je));[m
[31m-        return entries;[m
[32m+[m[32m        return entryData;[m
     }[m
 [m
     // READ one entry[m
[36m@@ -40,19 +39,10 @@[m [mclass Entry {[m
 [m
     // CREATE comment[m
     static addComment(id, comment, username) {[m
[31m-        // console.log(entryData.comments)[m
[31m-        // const newComment = `c${entryData.comments.length + 1}`;[m
         const selectedEntry = Entry.getEntry(id);[m
[31m-        console.log(selectedEntry.comments)[m
[31m-        console.log(selectedEntry.comments.length)[m
[31m-        const newCommentId = selectedEntry.comments.length + 1;[m
[31m-        console.log(newCommentId)[m
[31m-        const newComment = new Entry.comments({ id: newCommentId, text: comment, author: username })[m
[31m-        selectedEntry.comments.push(newComment);[m
[31m-        return newComment;[m
[31m-        // const seenEntry = Entry.getEntry(id);[m
[31m-        // seenEntry.comments.push(comment);[m
[31m-        // return [m
[32m+[m[32m        const newCommentId = selectedEntry[0].comments.length + 1;[m
[32m+[m[32m        selectedEntry[0].comments.push({ id: newCommentId, text: comment, author: username });[m
[32m+[m[32m        return selectedEntry;[m
     }[m
 [m
     // UPDATE entry's message[m
